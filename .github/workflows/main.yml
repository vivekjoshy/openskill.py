name: Platform Tests
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  cpython-stable:
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch. Without this if check, checks are duplicated since
    # internal PRs match both the push and pull_request events.
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository
    name: ${{ matrix.os }} / ${{ matrix.python-version }} (${{ matrix.architecture }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        architecture: ["x86", "x64"]
        experimental: [false]
    defaults:
      run:
        shell: bash
    steps:
        - uses: actions/checkout@v4
          with:
              fetch-depth: 0
        - name: Set up Stable CPython - ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}
            allow-prereleases: true
            cache: 'pip'
            cache-dependency-path: "**/pyproject.toml"
        - name: Install Tox
          run: python -m pip install tox-gh-actions>=3.2.0
        - name: Setup Test Suite
          run: tox -vv --notest
        - name: Run Tests
          run: |
              python -m pip install --upgrade pip
              tox --skip-pkg-install
          continue-on-error: ${{ matrix.experimental }}
        - name: "Upload Coverage to Codecov"
          uses: codecov/codecov-action@v4
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            fail_ci_if_error: ${{ !matrix.experimental }}
  cpython-unstable:
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository
    name: ${{ matrix.os }} / ${{ matrix.python-version }} (${{ matrix.architecture }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: true
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: ["3.13-dev"]
        architecture: ["x86", "x64"]
        experimental: [true]
    defaults:
      run:
        shell: bash
    steps:
        - uses: actions/checkout@v4
          with:
              fetch-depth: 0
        - name: Set up Unstable CPython - ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}
            cache: 'pip'
            cache-dependency-path: "**/pyproject.toml"
        - name: Install Tox
          run: python -m pip install tox-gh-actions>=3.2.0
        - name: Setup Test Suite
          run: tox -vv --notest
        - name: Run Tests
          run: |
              python -m pip install --upgrade pip
              tox --skip-pkg-install
          continue-on-error: ${{ matrix.experimental }}
        - name: "Upload Coverage to Codecov"
          uses: codecov/codecov-action@v4
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            fail_ci_if_error: ${{ !matrix.experimental }}
  pypy:
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository
    name: ${{ matrix.os }} / ${{ matrix.python-version }} (${{ matrix.architecture }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: true
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: ["pypy3.9", "pypy3.10"]
        architecture: ["x64"]
        experimental: [false]
    defaults:
      run:
        shell: bash
    steps:
        - uses: actions/checkout@v4
          with:
              fetch-depth: 0
        - name: Set up PyPy - ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}
            cache: 'pip'
            cache-dependency-path: "**/pyproject.toml"
        - name: Install Tox
          run: python -m pip install tox-gh-actions>=3.2.0
        - name: Setup Test Suite
          run: tox -vv --notest
        - name: Run Tests
          run: |
              python -m pip install --upgrade pip
              tox --skip-pkg-install
          continue-on-error: ${{ matrix.experimental }}
        - name: "Upload Coverage to Codecov"
          uses: codecov/codecov-action@v4
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            fail_ci_if_error: ${{ !matrix.experimental }}
